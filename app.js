
let gameBoard = [
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                [1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,1,1,1,1,2,2,2,2,2,1,2,2,2,2,2,1,1,1,1,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,2,1],
                [1,2,2,1,2,2,2,2,2,2,2,1,2,1,2,2,2,2,1,2,2,2,2,2,2,1,2,2,1,2,2,2,2,1,2,1,2,2,2,1],
                [1,2,2,1,1,1,1,2,2,2,2,1,2,1,2,2,2,2,1,2,2,2,2,2,2,1,1,1,1,2,2,2,2,1,2,1,2,2,2,1],
                [1,2,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,2,1,2,2,1,2,2,2,1,2,2,2,1,2,2,1],
                [1,2,2,1,1,1,1,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,2,2,2,1,2,2,1,2,2,2,1,2,2,2,1,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,1,2,2,2,1,2,2,2,1,1,2,1,2,2,2,1,1,1,2,2,2,1,1,1,1,1,2,2,2,2,2,1,2,2,2,2,1],
                [1,2,2,1,1,2,1,1,2,2,2,1,2,2,1,2,2,2,2,1,2,2,2,2,1,2,2,2,1,2,2,2,2,1,2,1,2,2,2,1],
                [1,2,2,1,2,1,2,1,2,2,2,1,2,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,2,2,2,2,1,2,1,2,2,2,1],
                [1,2,2,1,2,2,2,1,2,2,2,1,2,2,1,2,2,2,2,1,2,2,2,2,1,2,2,1,2,2,2,2,1,2,2,2,1,2,2,1],
                [1,2,2,1,2,2,2,1,2,2,2,1,2,1,1,2,2,2,1,1,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,1,1,1,1,1,2,2,2,1,1,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,1,2,2,2,1,2,2,2,2,1,2,2,2,2,1,1,2,2,1,2,2,2,1,1,2,2,1,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,1,2,1,1,1,2,2,2,2,1,2,2,2,2,1,2,1,2,1,2,2,2,1,2,1,2,1,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,2,1,2,2,1,1,2,2,2,1,2,2,1,1,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,1,2,2,2,1,2,2,2,1,1,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
                [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
              ];

let scoreBoard = [
                  [1,1,1,1,1,1,1,1,1,1],
                  [1,0,0,0,0,0,0,0,0,1],
                  [1,0,0,0,0,0,0,0,0,1],
                  [1,0,0,0,0,0,0,0,0,1],
                  [1,1,1,1,1,1,1,1,1,1]
                ];
let score = 10;
let local = {
  x:1,
  y:1
};

function displayGameBoard() {
let i = 0;
let output = "";
output += "<div id='pacman'></div>";
gameBoard.forEach(e => {
  output += "<div class='row'>";
  gameBoard[i].forEach(val => {
    if(val == 1){
      output += "<div class='brick'></div>";
    }
    else if(val == 2){
      output += "<div class='coin'></div>";
    }
    else if(val == 0){
      output += "<div class='empty'></div>";
    }
  });
  output += "</div>";
  i++;
});
document.getElementById('gameBoard').innerHTML = output;
}

function displayPacMan() {
  document.getElementById('pacman').style.top = `${local.y *20}px`;
  document.getElementById('pacman').style.left = `${local.x *20}px`;
}

function displayScore() {
  let i = 0;
  let output = "";
  output += "<div id='marker'></div>";
  scoreBoard.forEach(e => {
    output += "<div class='row'>";
    scoreBoard[i].forEach(val => {
      if(val == 1){
        output += "<div class='brick'></div>";
      }
      else if(val == 0){
        output += "<div class='empty'></div>";
      }
    });
    output += "</div>";
    i++;
  });
  document.getElementById('scoreBoard').innerHTML = output;
}

// Movement and collision control:

document.onkeydown = e => {
    if(e.code == 'ArrowRight')  {
      document.getElementById('pacman').style.transform = 'rotate(0deg)';
      if(gameBoard[local.y][local.x+1] != 1){
      local.x++;
      console.log(local.x);
      }
    }else if(e.code == 'ArrowLeft'){
      document.getElementById('pacman').style.transform = 'rotate(180deg)';
      if(gameBoard[local.y][local.x-1] != 1){
      local.x--;
      console.log(local.x);
      }
    }else if(e.code == 'ArrowUp'){
      document.getElementById('pacman').style.transform = 'rotate(270deg)';
      if(gameBoard[local.y-1][local.x] != 1){
      local.y--;
      console.log(local.y);
      }
    }else if(e.code=='ArrowDown'){
      document.getElementById('pacman').style.transform = 'rotate(90deg)';
      if(gameBoard[local.y+1][local.x] != 1){
      local.y++;
      console.log(local.y);
      }
    }

    if(gameBoard[local.y][local.x]==2){
      gameBoard[local.y][local.x]=0;
      score+=10;
      displayGameBoard();
      displayScore();
    }
  displayPacMan();
};

displayGameBoard();
displayPacMan();
displayScore();